/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "MMS"
 * 	found in "mms.asn"
 * 	`asn1c -fcompound-names`
 */

#ifndef	_AlternateAccess_H_
#define	_AlternateAccess_H_


#include "asn_application.h"

/* Including external dependencies */
#include "asn_SEQUENCE_OF.h"
#include "Identifier.h"
#include "Unsigned32.h"
#include "IndexRangeSeq.h"
#include "NULL.h"
#include "constr_SEQUENCE.h"
#include "constr_CHOICE.h"
#include "constr_SEQUENCE_OF.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AlternateAccess__Member_PR {
	AlternateAccess__Member_PR_NOTHING,	/* No components present */
	AlternateAccess__Member_PR_selectAlternateAccess,
	AlternateAccess__Member_PR_component,
	AlternateAccess__Member_PR_index,
	AlternateAccess__Member_PR_indexRange,
	AlternateAccess__Member_PR_allElements,
	AlternateAccess__Member_PR_named
} AlternateAccess__Member_PR;
typedef enum AlternateAccess__Member__selectAlternateAccess__accessSelection_PR {
	AlternateAccess__Member__selectAlternateAccess__accessSelection_PR_NOTHING,	/* No components present */
	AlternateAccess__Member__selectAlternateAccess__accessSelection_PR_component,
	AlternateAccess__Member__selectAlternateAccess__accessSelection_PR_index,
	AlternateAccess__Member__selectAlternateAccess__accessSelection_PR_indexRange,
	AlternateAccess__Member__selectAlternateAccess__accessSelection_PR_allElements
} AlternateAccess__Member__selectAlternateAccess__accessSelection_PR;

/* Forward declarations */
struct AlternateAccess;
struct AlternateAccessSelection;

/* Forward definitions */
typedef struct AlternateAccess__Member {
	AlternateAccess__Member_PR present;
	union AlternateAccess__Member_u {
		struct AlternateAccess__Member__selectAlternateAccess {
			struct AlternateAccess__Member__selectAlternateAccess__accessSelection {
				AlternateAccess__Member__selectAlternateAccess__accessSelection_PR present;
				union AlternateAccess__Member__selectAlternateAccess__accessSelection_u {
					Identifier_t	 component;
					Unsigned32_t	 index;
					struct AlternateAccess__Member__selectAlternateAccess__accessSelection__indexRange {
						Unsigned32_t	 lowIndex;
						Unsigned32_t	 numberOfElements;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} indexRange;
					NULL_t	 allElements;
				} choice;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} accessSelection;
			struct AlternateAccess	*alternateAccess;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} selectAlternateAccess;
		Identifier_t	 component;
		Unsigned32_t	 index;
		IndexRangeSeq_t	 indexRange;
		NULL_t	 allElements;
		struct AlternateAccess__Member__named {
			Identifier_t	 componentName;
			struct AlternateAccessSelection	*accesst;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} named;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlternateAccess__Member;

/* AlternateAccess */
typedef struct AlternateAccess {
	A_SEQUENCE_OF(AlternateAccess__Member) list;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlternateAccess_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_AlternateAccess;
extern asn_SET_OF_specifics_t asn_SPC_AlternateAccess_specs_1;
extern asn_TYPE_member_t asn_MBR_AlternateAccess_1[1];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "AlternateAccess.h"
#include "AlternateAccessSelection.h"

#endif	/* _AlternateAccess_H_ */
#include "asn_internal.h"
