/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "MMS"
 * 	found in "mms.asn"
 * 	`asn1c -fcompound-names`
 */

#ifndef	_AlternateAccessSelection_H_
#define	_AlternateAccessSelection_H_


#include "asn_application.h"

/* Including external dependencies */
#include "Identifier.h"
#include "Unsigned32.h"
#include "IndexRangeSeq.h"
#include "NULL.h"
#include "constr_SEQUENCE.h"
#include "constr_CHOICE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AlternateAccessSelection_PR {
	AlternateAccessSelection_PR_NOTHING,	/* No components present */
	AlternateAccessSelection_PR_selectAlternateAccess,
	AlternateAccessSelection_PR_component,
	AlternateAccessSelection_PR_index,
	AlternateAccessSelection_PR_indexRange,
	AlternateAccessSelection_PR_allElements
} AlternateAccessSelection_PR;

/* Forward declarations */
struct AlternateAccess;

/* AlternateAccessSelection */
typedef struct AlternateAccessSelection {
	AlternateAccessSelection_PR present;
	union AlternateAccessSelection_u {
		struct AlternateAccessSelection__selectAlternateAccess {
			Identifier_t	 component;
			Unsigned32_t	 index;
			struct AlternateAccessSelection__selectAlternateAccess__indexRange {
				Unsigned32_t	 lowIndex;
				Unsigned32_t	 numberOfElements;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} indexRange;
			NULL_t	 allElements;
			struct AlternateAccess	*alternateAccess;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} selectAlternateAccess;
		Identifier_t	 component;
		Unsigned32_t	 index;
		IndexRangeSeq_t	 indexRange;
		NULL_t	 allElements;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} AlternateAccessSelection_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_AlternateAccessSelection;
extern asn_CHOICE_specifics_t asn_SPC_AlternateAccessSelection_specs_1;
extern asn_TYPE_member_t asn_MBR_AlternateAccessSelection_1[5];
extern asn_per_constraints_t asn_PER_type_AlternateAccessSelection_constr_1;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "AlternateAccess.h"

#endif	/* _AlternateAccessSelection_H_ */
#include "asn_internal.h"
